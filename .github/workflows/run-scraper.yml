name: Zbierz i Wizualizuj Statystyki

on:
  # --- POCZĄTEK ZMIANY ---
  # Utrzymujemy oba wyzwalacze. 'schedule' będzie działał jako "zapalnik",
  # a 'push' zapewni ciągłość działania.
  schedule:
    - cron: '*/10 * * * *'
  
  # Nowy wyzwalacz: uruchom przy każdym 'push' do gałęzi 'main'
  push:
    branches:
      - main
  # --- KONIEC ZMIANY ---

  # Pozostawiamy możliwość ręcznego uruchomienia
  workflow_dispatch:

jobs:
  build-and-visualize:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # --- NOWY WARUNEK: Sprawdzamy, czy commit został wykonany przez bota ---
      # Ten krok zapobiegnie niekończącej się pętli. Automat będzie ignorował
      # własne commity, ale nadal będzie działał zgodnie z harmonogramem.
      - name: Check if the commit was made by the bot
        if: github.actor == 'actions-user' || github.actor == 'github-actions[bot]'
        run: |
          echo "Commit was made by the bot. Skipping this run to prevent loops."
          exit 0 # Zakończ z sukcesem, ale nie wykonuj dalszych kroków
        
      - name: Install Google Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Krok 1 - Zbierz nowe dane
        run: python scraper.py

      - name: Krok 2 - Wygeneruj nowy wykres
        run: python generate_chart.py

      - name: Krok 3 - Zapisz wyniki (dane i wykres)
        run: |-
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add dane.csv index.html
          git diff --staged --quiet || git commit -m "Aktualizacja danych i wykresu"
          git push
